{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"CurseResponse": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"content": {
						"type": "string"
					},
					"lang": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"content",
					"lang"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PostCurseRequest": {
				"properties": {
					"lang": {
						"type": "string"
					},
					"content": {
						"type": "string"
					}
				},
				"required": [
					"lang",
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ErrorResponse": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"errorUUID": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutCurseRequest": {
				"properties": {
					"lang": {
						"type": "string"
					},
					"content": {
						"type": "string"
					}
				},
				"required": [
					"lang",
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EpisodeResponse": {
				"properties": {
					"episode_id": {
						"type": "number",
						"format": "double"
					},
					"season": {
						"type": "number",
						"format": "double"
					},
					"episode": {
						"type": "number",
						"format": "double"
					},
					"netflix_id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"episode_id",
					"season",
					"episode",
					"netflix_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PostEpisodeRequest": {
				"properties": {
					"episode": {
						"type": "number",
						"format": "double"
					},
					"season": {
						"type": "number",
						"format": "double"
					},
					"netflix_id": {
						"type": "number",
						"format": "double"
					},
					"movie_id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"episode",
					"season",
					"netflix_id",
					"movie_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutEpisodeRequest": {
				"properties": {
					"episode": {
						"type": "number",
						"format": "double"
					},
					"season": {
						"type": "number",
						"format": "double"
					},
					"netflix_id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"episode",
					"season",
					"netflix_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PostLangRequest": {
				"properties": {
					"lang": {
						"type": "string"
					}
				},
				"required": [
					"lang"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MovieTitleResponse": {
				"properties": {
					"movie_title_id": {
						"type": "number",
						"format": "double"
					},
					"lang": {
						"type": "string"
					},
					"content": {
						"type": "string"
					}
				},
				"required": [
					"movie_title_id",
					"lang",
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MovieResponse": {
				"properties": {
					"movie_id": {
						"type": "number",
						"format": "double"
					},
					"lang": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"movie",
							"serie"
						]
					},
					"netflix_id": {
						"type": "number",
						"format": "double"
					},
					"minutes": {
						"type": "number",
						"format": "double"
					},
					"movie_titles": {
						"items": {
							"$ref": "#/components/schemas/MovieTitleResponse"
						},
						"type": "array"
					},
					"episodes": {
						"items": {
							"$ref": "#/components/schemas/EpisodeResponse"
						},
						"type": "array"
					}
				},
				"required": [
					"movie_id",
					"lang",
					"type",
					"minutes",
					"movie_titles",
					"episodes"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LyricSentenceResponse": {
				"properties": {
					"sentence_id": {
						"type": "number",
						"format": "double"
					},
					"lang": {
						"type": "string"
					},
					"content": {
						"type": "string"
					}
				},
				"required": [
					"sentence_id",
					"lang",
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LyricResponse": {
				"properties": {
					"lyric_id": {
						"type": "number",
						"format": "double"
					},
					"movie": {
						"$ref": "#/components/schemas/MovieResponse"
					},
					"episode": {
						"allOf": [
							{
								"$ref": "#/components/schemas/EpisodeResponse"
							}
						],
						"nullable": true
					},
					"seconds": {
						"type": "number",
						"format": "double"
					},
					"quality": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"sentences": {
						"items": {
							"$ref": "#/components/schemas/LyricSentenceResponse"
						},
						"type": "array"
					}
				},
				"required": [
					"lyric_id",
					"movie",
					"episode",
					"seconds",
					"quality",
					"sentences"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PostLyricRequest": {
				"properties": {
					"seconds": {
						"type": "number",
						"format": "double"
					},
					"movie_id": {
						"type": "number",
						"format": "double"
					},
					"quality": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"episode_id": {
						"type": "number",
						"format": "double",
						"nullable": true
					}
				},
				"required": [
					"seconds",
					"movie_id",
					"quality",
					"episode_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutLyricRequest": {
				"properties": {
					"seconds": {
						"type": "number",
						"format": "double"
					},
					"movie_id": {
						"type": "number",
						"format": "double"
					},
					"quality": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"episode_id": {
						"type": "number",
						"format": "double",
						"nullable": true
					}
				},
				"required": [
					"seconds",
					"movie_id",
					"quality",
					"episode_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PostLyricSentenceRequest": {
				"properties": {
					"lyric_id": {
						"type": "number",
						"format": "double"
					},
					"lang": {
						"type": "string"
					},
					"content": {
						"type": "string"
					}
				},
				"required": [
					"lyric_id",
					"lang",
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutLyricSentenceRequest": {
				"properties": {
					"lang": {
						"type": "string"
					},
					"content": {
						"type": "string"
					}
				},
				"required": [
					"lang",
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MovieType": {
				"enum": [
					"only_movies",
					"only_series"
				],
				"type": "string"
			},
			"PostMovieRequest": {
				"properties": {
					"lang": {
						"type": "string"
					},
					"netflix_id": {
						"type": "number",
						"format": "double"
					},
					"minutes": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"lang",
					"minutes"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutMovieRequest": {
				"properties": {
					"lang": {
						"type": "string"
					},
					"netflix_id": {
						"type": "number",
						"format": "double"
					},
					"minutes": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"lang",
					"netflix_id",
					"minutes"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PostMovieNameRequest": {
				"properties": {
					"lang": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"movie_id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"lang",
					"content",
					"movie_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutMovieNameRequest": {
				"properties": {
					"lang": {
						"type": "string"
					},
					"content": {
						"type": "string"
					}
				},
				"required": [
					"lang",
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"HighlightResponse": {
				"properties": {
					"from": {
						"type": "number",
						"format": "double"
					},
					"to": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"from",
					"to"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SearchResultResponse": {
				"properties": {
					"lyric": {
						"$ref": "#/components/schemas/LyricResponse"
					},
					"from_sentence": {
						"$ref": "#/components/schemas/LyricSentenceResponse"
					},
					"to_sentence": {
						"$ref": "#/components/schemas/LyricSentenceResponse"
					},
					"from_highlights": {
						"items": {
							"$ref": "#/components/schemas/HighlightResponse"
						},
						"type": "array"
					},
					"to_highlights": {
						"items": {
							"$ref": "#/components/schemas/HighlightResponse"
						},
						"type": "array"
					}
				},
				"required": [
					"lyric",
					"from_sentence",
					"to_sentence",
					"from_highlights",
					"to_highlights"
				],
				"type": "object",
				"additionalProperties": false
			},
			"HandlerTimeResponse": {
				"properties": {
					"name": {
						"type": "string"
					},
					"time": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"time"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SearchResponse": {
				"properties": {
					"from_lang_id": {
						"type": "string"
					},
					"to_lang_id": {
						"type": "string"
					},
					"search_phrase": {
						"type": "string"
					},
					"translations": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"main_results": {
						"items": {
							"$ref": "#/components/schemas/SearchResultResponse"
						},
						"type": "array"
					},
					"similar_results": {
						"items": {
							"$ref": "#/components/schemas/SearchResultResponse"
						},
						"type": "array"
					},
					"handlers_time": {
						"items": {
							"$ref": "#/components/schemas/HandlerTimeResponse"
						},
						"type": "array"
					}
				},
				"required": [
					"from_lang_id",
					"to_lang_id",
					"search_phrase",
					"translations",
					"main_results",
					"similar_results",
					"handlers_time"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SearchRequestFilterOptions": {
				"properties": {
					"hide_curses": {
						"type": "boolean"
					},
					"hide_movies": {
						"type": "boolean"
					},
					"hide_series": {
						"type": "boolean"
					},
					"only_movie_id": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SortingMode": {
				"enum": [
					"shortest",
					"best_match",
					"longest"
				],
				"type": "string"
			},
			"SearchRequest": {
				"properties": {
					"search_phrase": {
						"type": "string"
					},
					"from_lang_id": {
						"type": "string"
					},
					"to_lang_id": {
						"type": "string"
					},
					"filter_options": {
						"$ref": "#/components/schemas/SearchRequestFilterOptions"
					},
					"sorting_mode": {
						"$ref": "#/components/schemas/SortingMode"
					},
					"dont_use_cache": {
						"type": "boolean"
					}
				},
				"required": [
					"search_phrase",
					"from_lang_id",
					"to_lang_id",
					"filter_options",
					"sorting_mode",
					"dont_use_cache"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PermissionResponse": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"KeyResponse": {
				"properties": {
					"key": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"permissions": {
						"items": {
							"$ref": "#/components/schemas/PermissionResponse"
						},
						"type": "array"
					}
				},
				"required": [
					"key",
					"name",
					"permissions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PostKeyRequest": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header",
				"scopes": {
					"contributor": "It allows you to modify (Create, Update, Delete) the content of the application. E.g. Movies, Languages etc.",
					"client": "It allows you to access application data. This permission should be the only one for the end user.",
					"admin": "It allows you to add new keys and permissions. It also allows you to assign permissions keys."
				}
			}
		}
	},
	"info": {
		"title": "lyricated-api",
		"version": "v2 javascript",
		"description": "API for Lyricated app.",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/curse/new": {
			"post": {
				"operationId": "PostCurse",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CurseResponse"
								}
							}
						}
					}
				},
				"description": "It allows to add a new Curse to the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Curse"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostCurseRequest"
							}
						}
					}
				}
			}
		},
		"/curse/find": {
			"get": {
				"operationId": "GetCurses",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"curses": {
											"items": {
												"$ref": "#/components/schemas/CurseResponse"
											},
											"type": "array"
										}
									},
									"required": [
										"curses"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "It allows to find the Curse's that exist in the database.\nThe only_lang option is optional, it allows you to get Curse's only for a specific language.\nYou need \"client\" permission to use this endpoint.",
				"tags": [
					"Curse"
				],
				"security": [
					{
						"api_key": [
							"client"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "only_lang",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/curse/{id}": {
			"get": {
				"operationId": "GetCurse",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CurseResponse"
								}
							}
						}
					},
					"404": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to get the Curse specified with id.\nYou need \"client\" permission to use this endpoint.",
				"tags": [
					"Curse"
				],
				"security": [
					{
						"api_key": [
							"client"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "PutCurse",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CurseResponse"
								}
							}
						}
					},
					"404": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to update a Curse that is already in the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Curse"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutCurseRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteCurse",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CurseResponse"
								}
							}
						}
					},
					"404": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to delete a Curse that is already in the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Curse"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/episode/new": {
			"post": {
				"operationId": "PostEpisode",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EpisodeResponse"
								}
							}
						}
					},
					"422": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows to add a new Episode to the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Episode"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostEpisodeRequest"
							}
						}
					}
				}
			}
		},
		"/episode/{id}": {
			"get": {
				"operationId": "GetEpisode",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EpisodeResponse"
								}
							}
						}
					},
					"404": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to get the Episode specified with id.\nYou need \"client\" permission to use this endpoint.",
				"tags": [
					"Episode"
				],
				"security": [
					{
						"api_key": [
							"client"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "PutEpisode",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EpisodeResponse"
								}
							}
						}
					},
					"404": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to update a Episode that is already in the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Episode"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutEpisodeRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteEpisode",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EpisodeResponse"
								}
							}
						}
					},
					"404": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to delete an Episode that is already in the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Episode"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/lang/new": {
			"post": {
				"operationId": "PostLang",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"lang": {
											"type": "string"
										}
									},
									"required": [
										"lang"
									],
									"type": "object"
								}
							}
						}
					},
					"422": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows to add a new Lang to the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Lang"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostLangRequest"
							}
						}
					}
				}
			}
		},
		"/lang/all": {
			"get": {
				"operationId": "GetLangs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"langs": {
											"items": {
												"type": "string"
											},
											"type": "array"
										}
									},
									"required": [
										"langs"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows to get all Lang that are in the database.\nYou need \"client\" permission to use this endpoint.",
				"tags": [
					"Lang"
				],
				"security": [
					{
						"api_key": [
							"client"
						]
					}
				],
				"parameters": []
			}
		},
		"/lang/{lang}": {
			"delete": {
				"operationId": "DeleteLang",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"lang": {
											"type": "string"
										}
									},
									"required": [
										"lang"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to delete a Lang that is already in the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Lang"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "lang",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lyric/new": {
			"post": {
				"operationId": "CreateLyric",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LyricResponse"
								}
							}
						}
					},
					"422": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows to add a new Lyric to the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Lyric"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostLyricRequest"
							}
						}
					}
				}
			}
		},
		"/lyric/without-quality": {
			"get": {
				"operationId": "GetLyricWithoutQuality",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/ErrorResponse"
										},
										{
											"$ref": "#/components/schemas/LyricResponse"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows to get the first Lyric without quality set.\nYou need \"client\" permission to use this endpoint.",
				"tags": [
					"Lyric"
				],
				"security": [
					{
						"api_key": [
							"client"
						]
					}
				],
				"parameters": []
			}
		},
		"/lyric/random": {
			"get": {
				"operationId": "GetRandomLyric",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LyricResponse"
								}
							}
						}
					},
					"404": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to get random Lyric from the database.\nThere are also additional parameters for filtering quality which are optional.\nYou need \"client\" permission to use this endpoint.",
				"tags": [
					"Lyric"
				],
				"security": [
					{
						"api_key": [
							"client"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "qualityBetterThan",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "qualityLowerThan",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "qualityEqual",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/lyric/{id}": {
			"get": {
				"operationId": "GetLyricById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LyricResponse"
								}
							}
						}
					},
					"404": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to get the Lyric specified with id.\nYou need \"client\" permission to use this endpoint.",
				"tags": [
					"Lyric"
				],
				"security": [
					{
						"api_key": [
							"client"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "PutLyric",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LyricResponse"
								}
							}
						}
					},
					"404": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to update a Lyric that is already in the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Lyric"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutLyricRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteLyric",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LyricResponse"
								}
							}
						}
					},
					"422": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to delete a Lyric that is already in the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Lyric"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/lyric-sentence/new": {
			"post": {
				"operationId": "CreateLyricSentence",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LyricSentenceResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows to add a new LyricSentence to the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"LyricSentence"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostLyricSentenceRequest"
							}
						}
					}
				}
			}
		},
		"/lyric-sentence/{id}": {
			"get": {
				"operationId": "GetLyricSentence",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LyricSentenceResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to get the LyricSentence specified with id.\nYou need \"client\" permission to use this endpoint.",
				"tags": [
					"LyricSentence"
				],
				"security": [
					{
						"api_key": [
							"client"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "PutLyricSentence",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LyricSentenceResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to update a LyricSentence that is already in the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"LyricSentence"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutLyricSentenceRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteMovie",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LyricSentenceResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to delete a LyricSentence that is already in the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"LyricSentence"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/movie/find": {
			"get": {
				"operationId": "GetMovies",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"movies": {
											"items": {
												"$ref": "#/components/schemas/MovieResponse"
											},
											"type": "array"
										}
									},
									"required": [
										"movies"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "It allows you to search for movies from the database.\nThe \"type\" parameter is set to either \"only_movies\" or \"only_series\".\nYou need \"client\" permission to use this endpoint.",
				"tags": [
					"Movie"
				],
				"security": [
					{
						"api_key": [
							"client"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "type",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/MovieType"
						}
					}
				]
			}
		},
		"/movie/new": {
			"post": {
				"operationId": "CreateMovie",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MovieResponse"
								}
							}
						}
					}
				},
				"description": "It allows to add a new Movie to the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Movie"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostMovieRequest"
							}
						}
					}
				}
			}
		},
		"/movie/{id}": {
			"get": {
				"operationId": "GetMovie",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MovieResponse"
								}
							}
						}
					},
					"404": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to get the Movie specified with id.\nYou need \"client\" permission to use this endpoint.",
				"tags": [
					"Movie"
				],
				"security": [
					{
						"api_key": [
							"client"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "PutMovie",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MovieResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to update a Movie that is already in the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Movie"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutMovieRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteMovie",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MovieResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to delete a Movie that is already in the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"Movie"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/movie-name/new": {
			"post": {
				"operationId": "PostMovieName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MovieTitleResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows to add a new MovieName to the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"MovieName"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostMovieNameRequest"
							}
						}
					}
				}
			}
		},
		"/movie-name/{id}": {
			"get": {
				"operationId": "GetMovieName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MovieTitleResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to get the MovieName specified with id.\nYou need \"client\" permission to use this endpoint.",
				"tags": [
					"MovieName"
				],
				"security": [
					{
						"api_key": [
							"client"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "PutMovieName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MovieTitleResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to update a MovieName that is already in the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"MovieName"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutMovieNameRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteMovieName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MovieTitleResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "It allows you to delete a MovieName that is already in the database.\nYou need \"contributor\" permission to use this endpoint.",
				"tags": [
					"MovieName"
				],
				"security": [
					{
						"api_key": [
							"contributor"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/search": {
			"post": {
				"operationId": "Search",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SearchResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Allows you to search using the given phrase.\nAll options under \"filter_options\" are optional. They can be not included or set to null.\nYou need \"client\" permission to use this endpoint.",
				"tags": [
					"Search"
				],
				"security": [
					{
						"api_key": [
							"client"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SearchRequest"
							}
						}
					}
				}
			}
		},
		"/security/permissions": {
			"get": {
				"operationId": "GetPermissions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"permissions": {
											"items": {
												"$ref": "#/components/schemas/PermissionResponse"
											},
											"type": "array"
										}
									},
									"required": [
										"permissions"
									],
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Security"
				],
				"security": [
					{
						"api_key": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/security/key/all": {
			"get": {
				"operationId": "GetKeys",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"keys": {
											"items": {
												"$ref": "#/components/schemas/KeyResponse"
											},
											"type": "array"
										}
									},
									"required": [
										"keys"
									],
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Security"
				],
				"security": [
					{
						"api_key": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/security/key/new": {
			"post": {
				"operationId": "NewKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KeyResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Security"
				],
				"security": [
					{
						"api_key": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostKeyRequest"
							}
						}
					}
				}
			}
		},
		"/security/key/{key}": {
			"get": {
				"operationId": "GetKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KeyResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Security"
				],
				"security": [
					{
						"api_key": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "key",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KeyResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Security"
				],
				"security": [
					{
						"api_key": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "key",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/security/key/{key}/permission/{permission}": {
			"put": {
				"operationId": "SetPermission",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PermissionResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Security"
				],
				"security": [
					{
						"api_key": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "key",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "permission",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "UnsetPermission",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PermissionResponse"
								}
							}
						}
					},
					"400": {
						"description": "Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Security"
				],
				"security": [
					{
						"api_key": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "key",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "permission",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}